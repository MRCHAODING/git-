
丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject
$ git init
Initialized empty Git repository in D:/gitproject/.git/

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ ll
total 0

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ ll -a
total 12
drwxr-xr-x 1 丁超 197121 0 Mar 25 18:48 ./
drwxr-xr-x 1 丁超 197121 0 Mar 25 18:47 ../
drwxr-xr-x 1 丁超 197121 0 Mar 25 18:48 .git/

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git status
On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to track)

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ vim hello.txt

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ ll
total 1
-rw-r--r-- 1 丁超 197121 361 Mar 25 18:54 hello.txt

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ cat hello.txt
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        hello.txt

nothing added to commit but untracked files present (use "git add" to track)

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git add hello.txt
warning: LF will be replaced by CRLF in hello.txt.
The file will have its original line endings in your working directory

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   hello.txt


丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git --version
git version 2.34.0.windows.1

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git rm--catched hello.txt
git: 'rm--catched' is not a git command. See 'git --help'.

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git rm --catched hello.txt
error: unknown option `catched'
usage: git rm [<options>] [--] <file>...

    -n, --dry-run         dry run
    -q, --quiet           do not list removed files
    --cached              only remove from the index
    -f, --force           override the up-to-date check
    -r                    allow recursive removal
    --ignore-unmatch      exit with a zero status even if nothing matched
    --sparse              allow updating entries outside of the sparse-checkout cone
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character


丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git rm --cached hello.txt
rm 'hello.txt'

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        hello.txt

nothing added to commit but untracked files present (use "git add" to track)

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ ll
total 1
-rw-r--r-- 1 丁超 197121 361 Mar 25 18:54 hello.txt

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git add hello.txt
warning: LF will be replaced by CRLF in hello.txt.
The file will have its original line endings in your working directory

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git commit -m "first commit" hello.txt
warning: LF will be replaced by CRLF in hello.txt.
The file will have its original line endings in your working directory
[master (root-commit) f082b20] first commit
 1 file changed, 19 insertions(+)
 create mode 100644 hello.txt

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git status
On branch master
nothing to commit, working tree clean

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git reflog
f082b20 (HEAD -> master) HEAD@{0}: commit (initial): first commit

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ rm git.txt
rm: cannot remove 'git.txt': No such file or directory

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ cat hello.txt
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git
hello dc hello git

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ vim

[1]+  Stopped                 vim

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ vim hello.txt

[2]+  Stopped                 vim hello.txt

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ vim hello.txt

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ get status
bash: get: command not found

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ ll
total 1
-rw-r--r-- 1 丁超 197121 361 Mar 25 18:54 hello.txt

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ vim hello.txt

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   hello.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .hello.txt.swp
        .swp

no changes added to commit (use "git add" and/or "git commit -a")

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git add hello.txt
warning: LF will be replaced by CRLF in hello.txt.
The file will have its original line endings in your working directory

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   hello.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .hello.txt.swp
        .swp


丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git add .
.hello.txt.swp  .swp

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git commit -m "second commit" hello.txt
warning: LF will be replaced by CRLF in hello.txt.
The file will have its original line endings in your working directory
[master 8a8c7d3] second commit
 1 file changed, 1 insertion(+), 1 deletion(-)

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git reflog
8a8c7d3 (HEAD -> master) HEAD@{0}: commit: second commit
f082b20 HEAD@{1}: commit (initial): first commit

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ vim hello.txt

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ vim
vim.exe      vimdiff.exe  vimtutor

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ vim
.git/           .hello.txt.swp  .swp            hello.txt

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ vim hello.txt

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ vim hello.txt

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git reflaog
git: 'reflaog' is not a git command. See 'git --help'.

The most similar command is
        reflog

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git re
rebase         remote         replace        reset          revert
reflog         repack         request-pull   restore

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
$ git reflog
8a8c7d3 (HEAD -> master) HEAD@{0}: commit: second commit
f082b20 HEAD@{1}: commit (initial): first commit

丁超@LAPTOP-P348DBQG MINGW64 /d/gitproject (master)
